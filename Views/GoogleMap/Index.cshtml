<!DOCTYPE html>
<style>
    #googleMap {
        flex-grow: 1;
        height: 100%;
    }
</style>
<html>
<body>

    <h1>My First Google Map</h1>
    <div id="locationDetails" style="margin-top:20px;"></div>
    <div id="locationCode" style="margin-top:20px;"></div>
    <div style="margin-top:20px;" class="d-inline-flex">
        <input type="text" id="searchInput" placeholder="search by address">
        <button id="searchBtn" class="btn btn-primary" onclick="searchLocationDetails()">Search</button>
    </div >
    
    <div id="googleMap" style="width:100%;height:600px;margin-top:20px;"></div>
    

    <script>
        var map;
        var marker;
        let polygon;
        let markers = [];
        let centerMarker;
        function myMap() {
            // Use HTML5 Geolocation API to get the user's current position
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var userLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

                    var mapProp = {
                        center: userLocation,
                        zoom: 15, // Adjust zoom level as needed
                    };
                    map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

                    // Add a marker at the user's current location
                 

                    // Add a click event listener to the map
                    google.maps.event.addListener(map, 'click', function (event) {
                        var clickedLocation = event.latLng;
                        placeMarker(clickedLocation);
                        displayLocationDetails(clickedLocation);
                     //   markArea(clickedLocation);
                    });

                    // Display details of the user's current location
                    displayLocationDetails(userLocation);
                }, function () {
                    handleLocationError(true);
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false);
            }
        }
        function placeMarker(location) {
            // Remove existing marker if any
            if (marker) {
                marker.setMap(null);
            }
            marker = new google.maps.Marker({
                position: location,
                map: map
            });
        }
        function displayLocationDetails(location) {
            var geocoder = new google.maps.Geocoder();

            if (location) {
                
                const latitude = location.lat();
                const longitude = location.lng();

                fetch(`/GoogleMap/GetPolygonByCordinate?latitude=${latitude}&longitude=${longitude}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            //alert(`The clicked location is inside a polygon. Center: (${data.result.centerLat}, ${data.result.centerLng})`);
                            console.log("matching addresss:",data)
                            document.getElementById("locationDetails").innerHTML = "Address: " + data.result.address;
                            document.getElementById("locationCode").innerHTML = "Code is: "+data.result.centerCode ;
                        } else {
                            document.getElementById("locationDetails").innerHTML = "not found";
                            document.getElementById("locationCode").innerHTML = "";
                        }
                    })
                    .catch(error => console.error('Error:', error));
            } else {
                alert('Please click on the map to select a location first.');
            }
        } function searchLocationDetails() {
            const searchInput = document.getElementById('searchInput').value;
            if (searchInput == null || searchInput == '') {
                alert("enter value!!");
                return;
            }


            fetch(`/GoogleMap/GEtPolygonByAddress?address=${searchInput}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                        // Clear existing marker
                        if (marker) {
                            marker.setMap(null);
                        }
                            //alert(`The clicked location is inside a polygon. Center: (${data.result.centerLat}, ${data.result.centerLng})`);
                            console.log("matching addresss:", data)
                            document.getElementById("locationDetails").innerHTML = "Address: " + data.result.address;
                            document.getElementById("locationCode").innerHTML = "Code is: " + data.result.centerCode;
                            marker = new google.maps.Marker({
                            position: { lat: data.result.lat, lng: data.result .lng}
,
                            map: map
                        });

                        var newCenter = { lat: data.result.lat, lng: data.result.lng };
                        map.setCenter(newCenter);
                        // Add markers and polygon
                        addMarkersAndPolygon(data.result.polygonPoints);
                       
                        } else {
            // Clear existing markers and polygon
            if(marker){
                marker.setMap(null);
            }
            clearMarkers();
            clearPolygon();
                            document.getElementById("locationDetails").innerHTML = "not found";
                            document.getElementById("locationCode").innerHTML = "";
                        }
                    })
                    .catch(error => console.error('Error:', error));
          
        }
        function highlightBuilding(location) {
            map.data.forEach(function (feature) {
                var geometry = feature.getGeometry();
                if (geometry.getType() === 'Polygon') {
                    geometry.getArray().forEach(function (path) {
                        path.getArray().forEach(function (latlng) {
                            if (google.maps.geometry.poly.containsLocation(location, new google.maps.Polygon({ paths: path.getArray() }))) {
                                if (clickedFeature) {
                                    map.data.overrideStyle(clickedFeature, { fillColor: 'gray' });
                                }
                                clickedFeature = feature;
                                map.data.overrideStyle(feature, { fillColor: 'yellow' });
                            }
                        });
                    });
                }
            });
        }
        function markArea(location) {
            var circle = new google.maps.Circle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: map,
                center: location,
                radius: 10000 // Adjust the radius of the circle as needed
            });
        }
        function handleLocationError(browserHasGeolocation) {
            var errorMsg = browserHasGeolocation ?
                "Error: The Geolocation service failed." :
                "Error: Your browser doesn't support geolocation.";
            document.getElementById('locationDetails').innerHTML = errorMsg;
        }

        function haversineDistance(lat1, lon1, lat2, lon2) {
            const R = 6371e3; // Earth radius in meters
            const φ1 = lat1 * Math.PI / 180; // Latitude of the first point in radians
            const φ2 = lat2 * Math.PI / 180; // Latitude of the second point in radians
            const Δφ = (lat2 - lat1) * Math.PI / 180; // Difference in latitude in radians
            const Δλ = (lon2 - lon1) * Math.PI / 180; // Difference in longitude in radians

            const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +
                Math.cos(φ1) * Math.cos(φ2) *
                Math.sin(Δλ / 2) * Math.sin(Δλ / 2);
            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

            return R * c; // Distance in meters
        }
        function addMarkersAndPolygon(coords) {
            // Clear existing markers and polygon
            clearMarkers();
            clearPolygon();

            // Add markers
            // coords.forEach(function (coord) {
            //     var marker = new google.maps.Marker({
            //         position: coord,
            //         map: map
            //     });
            //     markers.push(marker);
            // });

            // Add polygon
            polygon = new google.maps.Polygon({
                paths: coords.concat([coords[0]]), // Close the polygon
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35
            });
            polygon.setMap(map);
        }

        function clearMarkers() {
            markers.forEach(function (marker) {
                marker.setMap(null);
            });
            markers = [];
        }

        function clearPolygon() {
            if (polygon) {
                polygon.setMap(null);
                polygon = null;
            }
        }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbwLbPr5g35t-qKXhysIw2V9WUQBYae18&callback=myMap"></script>

</body>
</html>